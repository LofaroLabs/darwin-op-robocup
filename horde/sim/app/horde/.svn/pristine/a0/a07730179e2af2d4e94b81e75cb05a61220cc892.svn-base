/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package sim.app.horde.scenarios.robot.darwin.agent;

import java.io.IOException;
import sim.app.horde.scenarios.robot.IRobot;
import sim.app.horde.scenarios.robot.behaviors.ICommandMotions;
import sim.app.horde.scenarios.robot.comm.Communication;
import sim.app.horde.scenarios.robot.comm.IParse;
import sim.app.horde.scenarios.robot.darwin.comm.DarwinComm;
import sim.app.horde.scenarios.robot.darwin.comm.DarwinParser;
import sim.app.horde.scenarios.robot.flockbots.comm.FlockbotComm;
import sim.app.horde.scenarios.robot.flockbots.comm.FlockbotParser;

/**
 *
 * @author drew
 */
public class Darwin implements IRobot{

    
    
    private Communication comm;
    private IParse myParser;
    
    
    
    
    private final DarwinParser parser = new DarwinParser();
    private final byte readDelayMS = 30;
    private Thread th;
    private final byte speed;
    
    public Darwin(String host, int port, byte speed) {
        this.speed = speed;
        try {       
            comm = new DarwinComm(host, port, parser, readDelayMS);
            th = new Thread(comm);
            th.start();
        } catch (IOException ex) {
            System.out.println("Error creating FlockbotComm.");
        }
    }
    
    
    @Override
    public void sendCommand(ICommandMotions cms) {
        try {
            comm.write(cms.command(speed));
        } catch (IOException ex) {
            System.out.println("Error sending command " + cms.toString() + " to " + comm.getIP() + ":" + comm.getPort());
        }
        
    }
    
    public void sendCommand(ICommandMotions cms, byte customSpeed) {
        try {
            comm.write(cms.command(customSpeed));
        } catch (IOException ex) {
            System.out.println("Error sending command " + cms.toString() + " to " + comm.getIP() + ":" + comm.getPort());
        }
    }

    @Override
    public IParse getParser() {
        return myParser;
    }
    
}
