/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package sim.app.horde.scenarios.robot.darwin.comm;

import com.google.gson.Gson;
import sim.app.horde.scenarios.robot.comm.DefaultParser;
import sim.app.horde.scenarios.robot.darwin.features.DarwinFeature;

/**
 *
 * @author drew
 */
public class DarwinParser extends DefaultParser {

    private final Object lock = new Object[0];
    Gson json = new Gson();
    DarwinFeature feature;
    
    @Override
    public void setInput(byte[] input) {
        super.setInput(input); 
        
        synchronized(lock) {
            
            String readings = new String(input);
            feature = json.fromJson(readings, DarwinFeature.class);
            
        }
        System.err.println("Current Distance To ball: " + getDistanceToBall());
    }

    // make methods to access the features.
    
    public double detectBall() {
        synchronized(lock) {
            System.err.println("Detect Ball: " + feature.ballDetect);
            return feature.ballDetect;
        }
    }

    public double getDistanceToBall() {
        synchronized(lock) {
            double dist = Math.sqrt(feature.ballX * feature.ballX + feature.ballY * feature.ballY);
            System.err.println(dist);
            return dist;
        }
    }

    public double getPoseX() {
        synchronized(lock) {
            System.err.println("Pose X: " + feature.poseX);
            return feature.poseX;
        }
    }

    public double getPoseY() {
        synchronized(lock) {
            System.err.println("Pose Y: " + feature.poseY);
            return feature.poseY;
        }
    }

    public double getPoseAngle() {
        synchronized(lock) {
            System.err.println("Pose Angle: " + feature.poseA);
            return feature.poseA;
        }
    }

    public double getBallX() {
        synchronized(lock) {
            System.err.println("Ball X: " + feature.ballX);
            return feature.ballX;
        }
    }
   public double getBallY() {
        synchronized(lock) {
            System.err.println("Ball Y: " + feature.ballY);
            return feature.ballY;
        }
    }
    
    
    
}
