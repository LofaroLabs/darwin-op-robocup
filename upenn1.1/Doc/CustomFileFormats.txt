This document describes the different types of custom data files used.

Look-Up Table (lut):

  The look-up table is used to segment the input YUV image to color labels. It is a mapping from a YUV value to bit-wise color label (orange, blue, yellow, green, etc). All of the look-up table files we provide follow the same naming convention: lut<Name>.raw (e.g. the webots look-up table is named lutWebots.raw).
  Look-up tables are simply arrays indexed by the YUV pixel values. We only consider the 6-significant bits of each YUV value per pixel. This results in an array of size n = 2^(6*3) = 262144 indicies (one corresponding to each possible 18 bit YUV pixel value). 
  The data contained in lut file is the raw array data. The array is a 8 bit character array with 262144 indicies. The value of lut[0] corresponds to the first byte in the lut file. lut[1] corresponds to the second byte in the lut file and so on.
  To construct the lut from the lut file just read the file one byte at a time and store the value the lut array.


Keyframe Motions (km_*):

  Keyframe motions are scripted, open loop motions that the robots can run. These are mainly used for the get-up routine and kicks. All keframe motions we provide have the following naming convention: km_<Name>.lua (e.g. km_StandupFromFront.lua is the keyframe motion file for standing up from the robots front/stomach).
  Keyframe motions are lua tables with the following members:
  mot
    -- table name
  mot.servos 
    -- list of motors/servos you want to control. 
  mot.keyframes
    -- list of frames that the robot will go through
    stiffness
      -- the motor stiffness/hardness for this frame
    angles
      -- the target motor positions for this frame
    duration
      -- the amount of time that it should take the robot to reach the target motor positions

